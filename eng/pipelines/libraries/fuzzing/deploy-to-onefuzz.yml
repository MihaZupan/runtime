trigger: none

#schedules:
#- cron: "0 10 * * *" # 10 AM UTC
#  displayName: OneFuzz deployment nightly run
#  branches:
#    include:
#    - main

variables:
  - template: ../variables.yml
  - name: fuzzerProject
    value: $(Build.SourcesDirectory)/src/libraries/Fuzzing/DotnetFuzzing
  - name: dotnetPath
    value: $(Build.SourcesDirectory)/.dotnet/dotnet

extends:
  template: /eng/pipelines/common/templates/pipeline-with-resources.yml
  parameters:
    stages:
    - stage: Build
      jobs:
      - job: windows
        displayName: Build & Deploy to OneFuzz
        timeoutInMinutes: 120
        pool:
          name: $(DncEngInternalBuildPool)
          demands: ImageOverride -equals windows.vs2022.amd64

        steps:
        - checkout: self
          clean: true
          fetchDepth: 1
          lfs: false

        - powershell: |
            cd $(Build.SourcesDirectory)
            ./build.cmd clr+libs+packs+host -rc Checked -c Debug
          displayName: Build runtime (checked + debug)

        - powershell: |
            $(dotnetPath) tool install --global SharpFuzz.CommandLine
          displayName: Install SharpFuzz.CommandLine

        - powershell: |
            cd $(fuzzerProject)
            $(dotnetPath) publish -o publish
          displayName: Build Fuzzing targets

        - powershell: |
            cd $(fuzzerProject)
            publish/DotnetFuzzing.exe prepare-onefuzz deployment
          displayName: Prepare OneFuzz deployment

        - publish: $(fuzzerProject)/deployment
          artifact: Deployment

#       - task: onefuzz-task@0
#         inputs:
#           onefuzzOSes: 'Windows'
#         env:
#           onefuzzDropDirectory: $(fuzzerProject)/deployment
#           SYSTEM_ACCESSTOKEN: $(System.AccessToken)
